	unix {
	nodaemon
	log /var/log/vpp/vpp.log
	full-coredump
	cli-listen /run/vpp/cli.sock
	gid vpp
	
	## run vpp in the interactive mode
	# interactive
	
	## do not use colors in terminal output
	# nocolor
	
	## do not display banner
	# nobanner
	}
	
	api-trace {
	on
	}
	
	api-segment {
	gid vpp
	}
	
	socksvr {
	default
	}
	
	cpu {
		## In the VPP there is one main thread and optionally the user can create worker(s)
		## The main thread and worker thread(s) can be pinned to CPU core(s) manually or automatically
	
		## Manual pinning of thread(s) to CPU core(s)
	
		## Set logical CPU core where main thread runs, if main core is not set
		## VPP will use core 1 if available
		main-core 1
	
		## Set logical CPU core(s) where worker threads are running
		corelist-workers 2
	
		## Automatic pinning of thread(s) to CPU core(s)
	
		## Sets number of CPU core(s) to be skipped (1 ... N-1)
		## Skipped CPU core(s) are not used for pinning main thread and working thread(s).
		## The main thread is automatically pinned to the first available CPU core and worker(s)
		## are pinned to next free CPU core(s) after core assigned to main thread
		# skip-cores 4
	
		## Specify a number of workers to be created
		## Workers are pinned to N consecutive CPU cores while skipping "skip-cores" CPU core(s)
		## and main thread's CPU core
		# workers 2
	
		## Set scheduling policy and priority of main and worker threads
	
		## Scheduling policy options are: other (SCHED_OTHER), batch (SCHED_BATCH)
		## idle (SCHED_IDLE), fifo (SCHED_FIFO), rr (SCHED_RR)
		# scheduler-policy fifo
	
		## Scheduling priority is used only for "real-time policies (fifo and rr),
		## and has to be in the range of priorities supported for a particular policy
		# scheduler-priority 50
	}
